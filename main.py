# -*- coding: utf-8 -*-

from threading import Thread
from time import sleep

import json
import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType

from config import *

vk_session = vk_api.VkApi(token=token)
vk = vk_session.get_api()
longpool = VkLongPoll(vk_session)


###############################################################################
# Init main elements (mpy actions)
###############################################################################
class Say:
    """
    Say(what, who=None, name=None) => action

    what - character speech
    who - character name
    name - is not working now


    """

    def __init__(self, what, who=None, name=None):
        self.text = what
        self.who = who
        self.name = name

    def __call__(self, player):
        """send message with speech"""
        text = (self.who + ":\n\n       ") if self.who else ""
        text += self.text
        vk.messages.send(user_id=player.id, message=text, random_id=0)
        sleep(len(self.text) / 50)  # speed of sending current speech


class Show:
    """
    Show(src) => action

    src (str) - vk image/video/audio url, that contains
    type-user_id-source_id. example "photo-194303024_457239055"

    """

    def __init__(self, src):
        self.source = src

    def __call__(self, player):
        """send message with attachment"""
        vk.messages.send(user_id=player.id, attachment=self.source, random_id=0)


class Menu:
    """
    Menu(buttons) => action

    buttons (dict) - {name_1: label_1, name_2: label_2, ... }

        name - label of button
        label - label to which game will jump


    !This action must be last in the label

    """

    def __init__(self, buttons):
        """Init keyboard"""
        self.questions = buttons

        self.keyboard = {
            "one_time": True,
            "buttons": [[button(i), ] for i in buttons
                        ]
        }
        self.keyboard = json.dumps(self.keyboard, ensure_ascii=False).encode('utf-8')
        self.keyboard = str(self.keyboard.decode('utf-8'))

    def __call__(self, player):
        """send message with menu buttons"""
        vk_session.method('messages.send',
                          {'user_id': player.id, 'message': "–í—ã–±–æ—Ä:", 'random_id': 0, 'keyboard': self.keyboard})

        player.question = self.questions  # using for catching choices


class Assign:
    """
    Assign(value, dst) => action

    value - name of value that must be changed
    dst (function) - function (lambda) that would be executed,
    whose return value will be the new value for "value-name"

    function must take one argument, example

            lambda player: player.values["yuri_love"] + 1

    """

    def __init__(self, value, dst):
        self.value = value
        self.dst = dst

    def __call__(self, player):
        """assign value"""
        player.values[self.value] = self.dst(player)


class If:
    """
    If(condition, action, else_action) => action

    condition (function) - function (lambda) that would be executed,
    whose return value must be bool (using for python "if")
        function must take one argument, example

            lambda player: 3 > 2

    action - can be label name, or mpy action. would be executed
    if condition return value be True
    else_action - can be label name, mpy action or None. would be executed
    if condition return value be False, or pass if else_action is None


    """

    def __init__(self, condition, action, else_action=None):
        self.condition = condition
        self.action = action
        self.else_action = else_action

    def __call__(self, player):
        """
        Check condition and execute

        r - if action have returned value, it will return it to the main game Thread
        for example if action is Jump().

        if action is label name, it will execute it and after continue executing current
        label. So, if you need to jump to another label use Jump() action


        """

        r = None

        if self.condition(player):
            if isinstance(self.action, str):
                player.jump(self.action)
            else:
                r = self.action(player)
        elif self.else_action:
            if isinstance(self.else_action, str):
                player.jump(self.else_action)
            else:
                r = self.else_action(player)

        return r


class Jump:
    """
    Jump(label) => action

    label - label name to which game must jump

    """

    def __init__(self, label):
        self.label = label

    def __call__(self, player):
        """stop current label, and jump to new"""
        return self.label


class Game:
    """
    Main manager for each player
    """

    def __init__(self, user, labels):
        self.id = user

        self.clabel = "start"  # current label
        self.cline = 0  # current line of clabel

        self.values = {"book": False}  # default value, in future must be changed from the outside

        self.question = {}  # help catch player's choices
        self.labels = labels  # in future would use global value
        Thread(target=self.jump, args=["start"]).start()

    def jump(self, label, line=0):

        self.clabel = label  # current label
        self.cline = line  # current line of clabel

        print(label + " : " + str(self.id))  # need for log
        j = None  # if there is any returning value - break executing and jump to new label "j"

        for self.cline, action in enumerate(self.labels[label][line:]):
            try:
                j = action(self)
            except Exception as e:
                print(f"Mistake occurs in {self.clabel} line {self.cline}\
                        \nPlayer id: {self.id}\
                        \nTypeError: {e}")

                GAMES.pop(self.id)  # remove player, so he can start again
                break
            print(self.cline)  # need for log
            sleep(0.4)
            if j:
                break
        if j:
            self.jump(j)


def button(text):
    """Help function to create button"""
    return {
        "action": {
            "type": "callback",
            "payload": "{}",
            "label": f"{text}"
        },
    }


###############################################################################
# load story (for now, story is located inside the engine)
###############################################################################

s = "–°–∏–ª—å–≤–∏—è"
m = "–Ø"
Story = {
    "start": [
        Show("photo-199752462_457239026"),
        Say("–¢–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ —è —É—Å–ª—ã—à–∞–ª —à–æ—Ä–æ—Ö –Ω–æ–≥ –∏ —Å—É–º–æ–∫, —è –ø–æ–Ω—è–ª, —á—Ç–æ –ª–µ–∫—Ü–∏—è –∫–æ–Ω—á–∏–ª–∞—Å—å."),
        Say("–õ–µ–∫—Ü–∏–∏ –ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä–∞ –≠–π–ª–∏–Ω –æ–±—ã—á–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ, –Ω–æ —Å–µ–≥–æ–¥–Ω—è —è –ø—Ä–æ—Å—Ç–æ –Ω–µ —Å–º–æ–≥ —Å–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è."),
        Say("–£ –º–µ–Ω—è –±—ã–ª–æ –º–Ω–æ–≥–æ —Ä–∞–∑–Ω—ã—Ö –º—ã—Å–ª–µ–π –≤ –≥–æ–ª–æ–≤–µ‚Ä¶ –∏ –≤—Å–µ —ç—Ç–∏ –º—ã—Å–ª–∏ –∫—É–ª—å–º–∏–Ω–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å–æ–º."),
        Say("–í–æ–ø—Ä–æ—Å–æ–º, –∫–æ—Ç–æ—Ä—ã–π —è –¥–∞–≤–Ω–æ —Ö–æ—Ç–µ–ª –∑–∞–¥–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º—É —á–µ–ª–æ–≤–µ–∫—É."),
        Show("photo-199752462_457239025"),
        Say("–ö–æ–≥–¥–∞ –º—ã –≤—ã—à–ª–∏ –∏–∑ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞, —è —Ç—É—Ç –∂–µ –∑–∞–º–µ—Ç–∏–ª –µ—ë."),
        Show("photo-199752462_457239034"),
        Say(
            "–Ø –∑–Ω–∞–ª –°–∏–ª—å–≤–∏ –µ—â—ë —Å —Ç–µ—Ö –ª–µ—Ç, –∫–æ–≥–¥–∞ –º—ã –±—ã–ª–∏ –¥–µ—Ç—å–º–∏."
            " –£ –Ω–µ—ë –±–æ–ª—å—à–æ–µ —Å–µ—Ä–¥—Ü–µ –∏ –æ–Ω–∞ –≤—Å–µ–≥–¥–∞ –±—ã–ª–∞ –º–Ω–µ —Ö–æ—Ä–æ—à–∏–º –¥—Ä—É–≥–æ–º."),
        Say("–ù–æ –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è‚Ä¶ –Ø –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª, —á—Ç–æ –º–Ω–µ —Ö–æ—á–µ—Ç—Å—è —á–µ–≥–æ-—Ç–æ –±–æ–ª—å—à–µ–≥–æ."),
        Say("–ë–æ–ª—å—à–µ–≥–æ, —á–µ–º –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã. –ë–æ–ª—å—à–µ, —á–µ–º –ø—Ä–æ—Å—Ç–æ —Ö–æ–¥–∏—Ç—å –¥–æ–º–æ–π –≤–º–µ—Å—Ç–µ —Å –∫–æ–Ω—Ü–æ–º –Ω–∞—à–∏—Ö –∑–∞–Ω—è—Ç–∏–π."),
        Say("–ö–∞–∫ —Ç–æ–ª—å–∫–æ –º—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏—Å—å –≤–∑–≥–ª—è–¥–∞–º–∏, —è —Ä–µ—à–∏–ª..."),
        Menu({"–°–ø—Ä–æ—Å–∏—Ç—å –µ—ë —Å–µ–π—á–∞—Å": "rightaway", "–ü–æ–¥–æ–∂–¥–∞—Ç—å –¥—Ä—É–≥–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞...": "later"})
    ],
    "rightaway": [
        Show("photo-199752462_457239035"),
        Say("–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ç–µ–±–µ —É—Ä–æ–∫?", s),
        Say("–•–æ—Ä–æ—à–æ‚Ä¶", m),
        Say("–Ø –Ω–µ –º–æ–≥ —Å–æ–±—Ä–∞—Ç—å—Å—è –∏ –ø—Ä–∏–∑–Ω–∞—Ç—å, —á—Ç–æ –≤–µ—Å—å –æ–Ω —Å–Ω–∞—á–∞–ª–∞ –≤–ª–µ—Ç–µ–ª –≤ –æ–¥–Ω–æ —É—Ö–æ, –∞ –∑–∞—Ç–µ–º –≤—ã–ª–µ—Ç–µ–ª –≤ –¥—Ä—É–≥–æ–º.", m),
        Say("–¢—ã —Å–µ–π—á–∞—Å –∏–¥—ë—à—å –¥–æ–º–æ–π? –•–æ—á–µ—à—å –ø—Ä–æ–π—Ç–∏—Å—å –≤–º–µ—Å—Ç–µ —Å–æ –º–Ω–æ–π?", m),
        Say("–ö–æ–Ω–µ—á–Ω–æ!", m),
        Show("photo-199752462_457239027"),
        Say("–ß–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –º—ã –¥–æ—à–ª–∏ –¥–æ –ª—É–≥–∞, –Ω–∞—á–∏–Ω–∞–≤—à–µ–≥–æ—Å—è –∑–∞ –Ω–∞—à–∏–º —Ä–æ–¥–Ω—ã–º –≥–æ—Ä–æ–¥–æ–º, –≤ –∫–æ—Ç–æ—Ä–æ–º –º—ã –∂–∏–ª–∏."),
        Say("–ó–¥–µ—Å—å –∂–∏–≤–æ–ø–∏—Å–Ω—ã–π –≤–∏–¥, –∫ –∫–æ—Ç–æ—Ä–æ–º—É —è —É–∂–µ –ø—Ä–∏–≤—ã–∫. –û—Å–µ–Ω—å –∑–¥–µ—Å—å –±—ã–ª–∞ –æ—Å–æ–±–µ–Ω–Ω–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞."),
        Say("–ö–æ–≥–¥–∞ –º—ã –±—ã–ª–∏ –¥–µ—Ç—å–º–∏, –º—ã –º–Ω–æ–≥–æ –∏–≥—Ä–∞–ª–∏ –Ω–∞ —ç—Ç–∏—Ö –ª—É–≥–∞—Ö. –¢–∞–∫ –º–Ω–æ–≥–æ –∑–¥–µ—Å—å –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π."),
        Say("–≠–π‚Ä¶ –≠–º–º‚Ä¶", m),
        Show("photo-199752462_457239035"),
        Say(
            "–û–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É–ª–∞—Å—å –∫–æ –º–Ω–µ –∏ —É–ª—ã–±–Ω—É–ª–∞—Å—å. "
            "–û–Ω–∞ –≤—ã–≥–ª—è–¥–µ–ª–∞ –Ω–∞—Å—Ç–æ–ª—å–∫–æ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–π, —á—Ç–æ –≤—Å—è –º–æ—è –Ω–µ—Ä–≤–æ–∑–Ω–æ—Å—Ç—å —É–ª–µ—Ç—É—á–∏–ª–∞—Å—å."),
        Say("–Ø —Å–ø—Ä–æ—à—É –µ—ë..!", "üí≠"),
        Say("–≠–º–º–º‚Ä¶ –•–æ—Ç–µ–ª–∞ –±—ã —Ç—ã‚Ä¶", m),
        Say("–•–æ—Ç–µ–ª–∞ –±—ã —Ç—ã —Å—Ç–∞—Ç—å —Ö—É–¥–æ–∂–Ω–∏—Ü–µ–π –º–æ–µ–π –≤–∏–∑—É–∞–ª—å–Ω–æ–π –Ω–æ–≤–µ–ª–ª—ã?", m),
        Show("photo-199752462_457239036"),
        Say("–¢–∏—à–∏–Ω–∞."),
        Say("–û–Ω–∞ –≤—ã–≥–ª—è–¥–µ–ª–∞ —Å—Ç–æ–ª—å —à–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–π, —á—Ç–æ —è –Ω–∞—á–∞–ª –±–æ—è—Ç—å—Å—è —Ö—É–¥—à–µ–≥–æ. –ù–æ –∑–∞—Ç–µ–º‚Ä¶"),
        Show("photo-199752462_457239036"),
        Say("–ö–æ–Ω–µ—á–Ω–æ, –Ω–æ —á—Ç–æ —Ç–∞–∫–æ–µ \"–≤–∏–∑—É–∞–ª—å–Ω–∞—è –Ω–æ–≤–µ–ª–ª–∞\"?", s),
        Menu({"–≠—Ç–æ –≤–∏–¥–µ–æ–∏–≥—Ä–∞": "game", "–≠—Ç–æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–Ω–∏–≥–∞": "book"})

    ],
    "game": [
        Say("–≠—Ç–æ –≤—Ä–æ–¥–µ –≤–∏–¥–µ–æ–∏–≥—Ä—ã, –≤ –∫–æ—Ç–æ—Ä—É—é —Ç—ã –º–æ–∂–µ—à—å –∏–≥—Ä–∞—Ç—å –Ω–∞ —Å–≤–æ—ë–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ –∏–ª–∏ –∫–æ–Ω—Å–æ–ª–∏.", m),
        Say("–ù—É –∏–ª–∏, –µ—Å–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–Ω–∞—é—Ç —Ç–æ–ª–∫ –≤ –∏–∑–≤—Ä–∞—â–µ–Ω–∏—è—Ö - —Ç–æ –¥–µ–ª–∞—é—Ç –±–æ—Ç–∞ –≤–∫.", m),
        Say("–í –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –Ω–æ–≤–µ–ª–ª–∞—Ö —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –∏—Å—Ç–æ—Ä–∏—è —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏ –∏ –º—É–∑—ã–∫–æ–π.", m),
        Say("–ò–Ω–æ–≥–¥–∞ —Ç—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—à—å –¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤–ª–∏—è—é—Ç –Ω–∞ –∫–æ–Ω–µ—Ü –∏—Å—Ç–æ—Ä–∏–∏.", m),
        Say("–¢–æ –µ—Å—Ç—å —ç—Ç–æ –∫–∞–∫ —Ç–µ –∫–Ω–∏–≥–∏-–∏–≥—Ä—ã?", s),
        Say("–¢–æ—á–Ω–æ! –£ –º–µ–Ω—è –µ—Å—Ç—å –º–Ω–æ–≥–æ —Ä–∞–∑–Ω—ã—Ö –∏–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ, –ø–æ-–º–æ–µ–º—É, –º–æ–≥—É—Ç —Å—Ä–∞–±–æ—Ç–∞—Ç—å.", m),
        Say("–ò —è –¥—É–º–∞–ª, —á—Ç–æ —Ç—ã –º–æ–≥–ª–∞ –±—ã –ø–æ–º–æ—á—å –º–Ω–µ‚Ä¶ —Ç–∞–∫ –∫–∞–∫ —è –∑–Ω–∞—é, –∫–∞–∫ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Ä–∏—Å–æ–≤–∞—Ç—å.", m),
        Say("–ú–Ω–µ –æ–¥–Ω–æ–º—É –±—É–¥–µ—Ç —Ç—Ä—É–¥–Ω–æ –¥–µ–ª–∞—Ç—å –≤–∏–∑—É–∞–ª—å–Ω—É—é –Ω–æ–≤–µ–ª–ª—É.", m),
        Show("photo-199752462_457239034"),
        Say("–ù—É –∫–æ–Ω–µ—á–Ω–æ! –Ø –º–æ–≥—É –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è. –ù–∞–¥–µ—é—Å—å, —è —Ç–µ–±—è –Ω–µ —Ä–∞–∑–æ—á–∞—Ä—É—é.", m),
        Say("–°–∏–ª—å–≤–∏, —Ç—ã –∂–µ –∑–Ω–∞–µ—à—å, —Ç—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–º–æ–∂–µ—à—å –º–µ–Ω—è —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞—Ç—å.", m),
        Jump("marry")
    ],
    "book": [
        Assign("book", lambda player: True),
        Say("–≠—Ç–æ –∫–∞–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–Ω–∏–≥–∞, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –º–æ–∂–µ—à—å —á–∏—Ç–∞—Ç—å –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ –∏–ª–∏ –∫–æ–Ω—Å–æ–ª–∏.", m),
        Show("photo-199752462_457239036"),
        Say("–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è?", s),
        Say("–¢—ã –º–æ–∂–µ—à—å –¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤–µ–¥—É—Ç –∫ —Ä–∞–∑–ª–∏—á–Ω—ã–º —Å–æ–±—ã—Ç–∏—è–º –∏ –∫–æ–Ω—Ü–æ–≤–∫–∞–º –∏—Å—Ç–æ—Ä–∏–∏.", m),
        Say("–ê –∫–æ–≥–¥–∞ –≤ –¥–µ–ª–æ –≤—Å—Ç—É–ø–∞–µ—Ç \"–≤–∏–∑—É–∞–ª—å–Ω–∞—è\" —á–∞—Å—Ç—å?", s),
        Say(
            "–í –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –Ω–æ–≤–µ–ª–ª–∞—Ö –µ—Å—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏ –¥–∞–∂–µ –º—É–∑—ã–∫–∞, –∑–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã, "
            "–∏ –∏–Ω–æ–≥–¥–∞ –æ–∑–≤—É—á–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –∏–¥—ë—Ç –Ω–∞—Ä–∞–≤–Ω–µ —Å —Ç–µ–∫—Å—Ç–æ–º.",
            m),
        Say(
            "–Ø—Å–Ω–æ! –≠—Ç–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –∫–∞–∂–µ—Ç—Å—è –≤–µ—Å—ë–ª—ã–º."
            " –ï—Å–ª–∏ —á–µ—Å—Ç–Ω–æ, —è —Ä–∞–Ω—å—à–µ –¥–µ–ª–∞–ª–∞ –≤–µ–±-–∫–æ–º–∏–∫—Å—ã, —Ç–∞–∫ —á—Ç–æ —É –º–µ–Ω—è –µ—Å—Ç—å –º–Ω–æ–≥–æ –∏–¥–µ–π.",
            s),
        Say("–≠—Ç–æ –æ—Ç–ª–∏—á–Ω–æ! –¢–∞–∫‚Ä¶ —Ç—ã —Ö–æ—á–µ—à—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ –º–Ω–æ–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ö—É–¥–æ–∂–Ω–∏—Ü—ã?", m),
        Say("–•–æ—á—É!", m),
        Jump("marry")

    ],
    "marry": [
        Say("...\n\n\n...\n\n\n"),
        Say("–ò —Ç–∞–∫ –º—ã —Å—Ç–∞–ª–∏ –∫–æ–º–∞–Ω–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –Ω–æ–≤–µ–ª–ª."),
        Say("–ó–∞ –¥–æ–ª–≥–∏–µ –≥–æ–¥—ã –º—ã —Å–¥–µ–ª–∞–ª–∏ –º–Ω–æ–≥–æ –∏–≥—Ä, –ø–æ–ª—É—á–∏–≤ –ø—Ä–∏ —ç—Ç–æ–º –º–Ω–æ–≥–æ –≤–µ—Å–µ–ª—å—è."),
        If(lambda player: player.values["book"],
           Say("–ù–∞—à–∞ –ø–µ—Ä–≤–∞—è –∏–≥—Ä–∞ –±—ã–ª–∞ –æ—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ –æ–¥–Ω–æ–π –∏–∑ –∏–¥–µ–π –°–∏–ª—å–≤–∏, –Ω–æ –∑–∞—Ç–µ–º —è –Ω–∞—á–∞–ª –¥–∞–≤–∞—Ç—å –∏ —Å–≤–æ–∏ –∏–¥–µ–∏.")),
        Say("–ú—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏ –ø—Ä–∏–¥—É–º—ã–≤–∞–ª–∏ –∏—Å—Ç–æ—Ä–∏–∏ –∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π, –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–ª–∏ –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–ª–∏—á–Ω—ã—Ö –∏–≥—Ä!"),
        Say("–ò –≤ –æ–¥–∏–Ω –¥–µ–Ω—å‚Ä¶"),
        Show("photo-199752462_457239030"),
        Say("–≠–π‚Ä¶", s),
        Say("–î–∞?", s),
        Show("photo-199752462_457239029"),
        Say("–¢—ã –∂–µ–Ω–∏—à—å—Å—è –Ω–∞ –º–Ω–µ?", s),
        Say("–ß—Ç–æ? –° —á–µ–≥–æ —ç—Ç–æ —Ç—ã –≤–¥—Ä—É–≥?", m),
        Show("photo-199752462_457239032"),
        Say("–î–∞ –ª–∞–¥–Ω–æ —Ç–µ–±–µ, —Å–∫–æ–ª—å–∫–æ –º—ã —É–∂–µ –≤—Å—Ç—Ä–µ—á–∞–µ–º—Å—è?", s),
        Say("–ù–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è‚Ä¶", m),
        Show("photo-199752462_457239031"),
        Say("–ü–æ—Å–ª–µ–¥–Ω—é—é –ø–∞—Ä—É –ª–µ—Ç –º—ã –¥–µ–ª–∞–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–µ–ª–ª—ã –∏ –ø—Ä–æ–≤–æ–¥–∏–º –≤—Ä–µ–º—è –≤–º–µ—Å—Ç–µ, –ø–æ–º–æ–≥–∞–µ–º –¥—Ä—É–≥ –¥—Ä—É–≥—É‚Ä¶", s),
        Say(
            "–Ø —É–∑–Ω–∞–ª–∞ —Ç–µ–±—è –∏ –∑–∞–±–æ—Ç–∏–ª–∞—Å—å –æ —Ç–µ–±–µ –±–æ–ª—å—à–µ, —á–µ–º –æ –∫–æ–º-–ª–∏–±–æ –µ—â—ë."
            " –ò —è –¥—É–º–∞—é, —á—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å —Ç–æ –∂–µ —Å–∞–º–æ–µ, –≤–µ—Ä–Ω–æ?",
            s),
        Say("–°–∏–ª—å–≤–∏‚Ä¶", m),
        Show("photo-199752462_457239029"),
        Say("–ù–æ —è –∑–Ω–∞—é, —á—Ç–æ —Ç—ã –Ω–µ—Ä–µ—à–∏—Ç–µ–ª—å–Ω—ã–π. –ï—Å–ª–∏ –±—ã —è —Å–¥–µ—Ä–∂–∞–ª–∞—Å—å, –∫—Ç–æ –∑–Ω–∞–µ—Ç, –∫–æ–≥–¥–∞ –±—ã —Ç—ã —Å–¥–µ–ª–∞–ª –º–Ω–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ?", s),
        Show("photo-199752462_457239030"),
        Say("–¢–∞–∫ —Ç—ã –∂–µ–Ω–∏—à—å—Å—è –Ω–∞ –º–Ω–µ?", s),
        Say("–ö–æ–Ω–µ—á–Ω–æ, —è –∂–µ–Ω—é—Å—å! –ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–µ–ª —Å–¥–µ–ª–∞—Ç—å —Ç–µ–±–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –∫–ª—è–Ω—É—Å—å!", m),
        Say("–Ø –∑–Ω–∞—é, –∑–Ω–∞—é.", s),
        Say("–î—É–º–∞—é‚Ä¶ –Ø –ø—Ä–æ—Å—Ç–æ —Å–ª–∏—à–∫–æ–º –≤–æ–ª–Ω–æ–≤–∞–ª—Å—è –æ –≤—Ä–µ–º–µ–Ω–∏. –Ø —Ö–æ—Ç–µ–ª –∑–∞–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –≤—Ä–µ–º—è.", m),
        Show("photo-199752462_457239029"),
        Say("–¢—ã —Å–ª–∏—à–∫–æ–º —Å–∏–ª—å–Ω–æ –≤–æ–ª–Ω—É–µ—à—å—Å—è. –ï—Å–ª–∏ –±—ã —ç—Ç–æ –±—ã–ª–∞ –≤–∏–∑—É–∞–ª—å–Ω–∞—è –Ω–æ–≤–µ–ª–ª–∞, —Ç–æ —è –±—ã –≤—ã–±—Ä–∞–ª–∞ –ø—Ä–∏–¥–∞—Ç—å —Ç–µ–±–µ —Å–º–µ–ª–æ—Å—Ç–∏!",
            s),
        Say("...\n\n\n\n...\n\n\n\n"),
        Show("photo-199752462_457239028"),
        Say("–ú—ã –ø–æ–∂–µ–Ω–∏–ª–∏—Å—å –≤—Å–∫–æ—Ä–µ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ."),
        Say("–ù–∞—à –¥—É—ç—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∂–∏–ª –∏ –ø–æ—Å–ª–µ –Ω–∞—à–µ–π —Å–≤–∞–¥—å–±—ã‚Ä¶ –∏ —è –∏–∑–æ –≤—Å–µ—Ö —Å–∏–ª —Å—Ç–∞—Ä–∞–ª—Å—è —Å—Ç–∞—Ç—å —Ä–µ—à–∏—Ç–µ–ª—å–Ω–µ–µ."),
        Say("–í–º–µ—Å—Ç–µ –º—ã –∂–∏–ª–∏ –¥–æ–ª–≥–æ –∏ —Å—á–∞—Å—Ç–ª–∏–≤–æ."),
        Say("=============\n\n\n\n\n\n\n\n\n–•–æ—Ä–æ—à–∞—è –∫–æ–Ω—Ü–æ–≤–∫–∞"),
        Menu({"–ù–∞—á–∞—Ç—å —Å –Ω–∞—á–∞–ª–∞": "start"})

    ],
    "later": [
        Say("–£ –º–µ–Ω—è –Ω–µ –±—ã–ª–æ —Å–∏–ª —Å–æ–±—Ä–∞—Ç—å—Å—è –∏ —Å–ø—Ä–æ—Å–∏—Ç—å –µ—ë –≤ —ç—Ç—É —Å–µ–∫—É–Ω–¥—É. –°–≥–ª–æ—Ç–Ω—É–≤, —è —Ä–µ—à–∏–ª —Å–ø—Ä–æ—Å–∏—Ç—å –µ—ë –ø–æ–∑–∂–µ."),
        Show("photo-199752462_457239028"),
        Say("–ù–æ —è –±—ã–ª –Ω–µ—Ä–µ—à–∏—Ç–µ–ª–µ–Ω."),
        Say("–Ø –Ω–µ —Å–ø—Ä–æ—Å–∏–ª —É –Ω–µ—ë –≤ —Ç–æ—Ç –¥–µ–Ω—å –∏ –Ω–µ —Å–º–æ–≥ —Å–ø—Ä–æ—Å–∏—Ç—å –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–¥–∞."),
        Say("–ü–æ–ª–∞–≥–∞—é, —Ç–µ–ø–µ—Ä—å —è –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —É–∑–Ω–∞—é –æ—Ç–≤–µ—Ç –Ω–∞ –º–æ–π –≤–æ–ø—Ä–æ—Å‚Ä¶"),
        Say("=============\n\n\n\n\n\n\n\n\n–ü–ª–æ—Ö–∞—è –∫–æ–Ω—Ü–æ–≤–∫–∞"),
        Menu({"–ù–∞—á–∞—Ç—å —Å –Ω–∞—á–∞–ª–∞": "start"})
    ]
}


###############################################################################
# vk side
###############################################################################


def STAY_ALIVE():
    """waking up server"""
    while True:
        vk.messages.send(user_id=559825295, message="5 min more", random_id=0)
        sleep(600)


GAMES = {}
Thread(target=STAY_ALIVE).start()

for event in longpool.listen():

    if event.type == VkEventType.MESSAGE_NEW and event.to_me:

        user_id = event.user_id
        if user_id in GAMES:
            if event.text in GAMES[user_id].question:
                # GAMES[user_id].jump(GAMES[user_id].question[event.text])
                Thread(target=GAMES[user_id].jump, args=[GAMES[user_id].question[event.text]]).start()
        else:
            GAMES[user_id] = Game(user_id, Story)

print(GAMES)
